<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Website Project Tasks</title>
    <style>
        body {
            font-family: 'Arial', sans-serif;
            background-color: lightpink; /* Light green background color */
            margin: 0;
            padding: 0;
            display: flex;
            flex-direction: column;
            align-items: center;
            height: 100vh;
        }

        #task-container {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 20px;
            margin-top: 20px;
        }

        .task-card {
            background-color: #f9f9f9;
            border-radius: 12px;
            box-shadow: 0 0 15px rgba(0, 0, 0, 0.2);
            overflow: hidden;
            margin-bottom: 20px;
        }

        .task {
            padding: 20px;
            transition: transform 0.3s, box-shadow 0.3s;
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        .task:hover {
            transform: translateY(-5px);
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
        }

        .high-priority {
            border-left: 8px solid #e74c3c; /* Red color for high priority */
        }

        .medium-priority {
            border-left: 8px solid #f39c12; /* Orange color for medium priority */
        }

        .low-priority {
            border-left: 8px solid #3498db; /* Blue color for low priority */
        }

        h2 {
            margin-top: 0;
            color: #333;
        }

        .task-meta {
            color: #777;
            margin-bottom: 0;
        }

        .label {
            background-color: #ecf0f1; /* Light gray for labels */
            padding: 6px 12px;
            border-radius: 8px;
            margin-top: 10px;
        }

        .completed {
            background-color: #d5e8d4; /* Light green for completed tasks */
            text-decoration: line-through;
        }

        .add-task-container {
            display: flex;
            flex-wrap: wrap;
            justify-content: center;
            align-items: center;
            margin-top: 20px;
        }

        #task-input,
        #deadline-input,
        #priority-input,
        #label-input {
            width: 80%;
            padding: 10px;
            margin: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            margin-right: 10px;
        }

        #add-task-button {
            background-color: #5bc0de;
            color: #fff;
            border: none;
            padding: 10px;
            cursor: pointer;
            border-radius: 4px;
        }
    </style>
</head>
<body>

    <div id="task-container">
        <!-- Tasks will be dynamically added here -->
    </div>

    <div class="add-task-container">
        <input type="text" id="task-input" placeholder="Task">
        <input type="date" id="deadline-input">
        <select id="priority-input">
            <option value="high">High Priority</option>
            <option value="medium">Medium Priority</option>
            <option value="low">Low Priority</option>
        </select>
        <input type="text" id="label-input" placeholder="Label">
        <button class="add-task" id="add-task-button" onclick="addTask()">Add Task</button>
    </div>

    <script>
        function addTask() {
            const taskContainer = document.getElementById('task-container');
            const taskInput = document.getElementById('task-input').value;
            const deadlineInput = document.getElementById('deadline-input').value;
            const priorityInput = document.getElementById('priority-input').value;
            const labelInput = document.getElementById('label-input').value;

            if (taskInput.trim() === '') {
                alert('Please enter a task.');
                return;
            }

            const newTaskCard = document.createElement('div');
            newTaskCard.className = 'task-card';
            
            const newTask = document.createElement('div');
            newTask.className = `task ${priorityInput}-priority`;
            newTask.innerHTML = `
                <h2>${taskInput}</h2>
                <p class="task-meta">Deadline: ${deadlineInput}</p>
                <p class="label">${labelInput}</p>
                <button onclick="completeTask(this)">Complete</button>
                <button onclick="deleteTask(this)">Delete</button>
            `;

            newTaskCard.appendChild(newTask);
            taskContainer.appendChild(newTaskCard);
            clearInputFields(); // Clear the input fields after adding a task
        }

        function completeTask(button) {
            const task = button.parentElement;
            task.classList.toggle('completed');
        }

        function deleteTask(button) {
            const taskCard = button.parentElement.parentElement;
            taskCard.remove();
        }

        function clearInputFields() {
            document.getElementById('task-input').value = '';
            document.getElementById('deadline-input').value = '';
            document.getElementById('priority-input').value = 'high';
            document.getElementById('label-input').value = '';
        }
    </script>

</body>
</html>
